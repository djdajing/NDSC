import json
import pandas as pd

jsonFiles = ["D:\\fashion.json","D:\\mobile.json","D:\\beauty.json"]
csvFiles = ["D:\\fashion_data_info_train_competition.csv","D:\\mobile_data_info_train_competition.csv","D:\\beauty_data_info_train_competition.csv"]
outputFiles = ["D:\\fashion_data_info_train_competition_edited.csv","D:\\mobile_data_info_train_competition_edited.csv","D:\\beauty_data_info_train_competition_edited.csv"]

for fileCount in range(len(jsonFiles)):
    motherJSON = {}
    #read in json and remove all spaces special characters in the key values
    with open(jsonFiles[fileCount], encoding='utf-8-sig') as json_file:
        json_data = json.load(json_file)
        for category in json_data:
            bufferJSON = {}
            for key,value in json_data[category].items():
                editedKey = ''.join(e for e in key if e.isalnum())
                bufferJSON[editedKey] = value
            motherJSON[category] = bufferJSON

    #read in csv
    dataframe = pd.read_csv(csvFiles[fileCount], delimiter = ',')
    header = list(dataframe.head(0))

    counter = 0
    titleColumn = list(dataframe['title'])
    for title in titleColumn:
        titleColumn[counter] = ''.join(e for e in title if e.isalnum())
        counter +=1

    #[3:8], where 3 is the first element you need and 8 is the first element you don't need
    for attribute in header[3:8]:
        attributeToFill = dataframe[attribute]
        jsonAttribute = motherJSON[attribute]
        counter = 0
        for cellItem in attributeToFill:
            if pd.isna(cellItem):
                for key, value in jsonAttribute.items():
                    if key in titleColumn[counter]:
                        #print("key: " + key + "title: "+titleColumn[counter] + "value: " + str(value))
                        dataframe[attribute][counter] = value
                        break
            if counter % 10000 == 0: #just to check which row it's at
                print(counter)
            counter += 1
    dataframe.to_csv(outputFiles[fileCount],index=False)